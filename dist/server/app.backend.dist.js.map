{"version":3,"sources":["file://webpack/bootstrap 0d2389adda95c9060a4e","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\index.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\core\\Server.ts","file://external \"koa\"","file://external \"koa-static\"","file://external \"koa-bodyparser\"","file://external \"koa-qs\"","file://external \"koa-logger\"","file://external \"koa-session\"","file://external \"koa-passport\"","file://external \"koa-mount\"","file://external \"koa-convert\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\core\\Database.ts","file://external \"knex\"","file://external \"lodash\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\core\\Exceptions.ts","file://external \"fs\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\routes\\api.ts","file://external \"koa-router\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\core\\ServerApiService.ts","file://external \"moment\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\common\\Signaller.ts","file://external \"signals\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\common\\ApiService.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\common\\itemTypes.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\stats\\GeneralStatisticsController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\core\\QueryEngine.ts","file://external \"graphql\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\graphql\\entityQLType.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\graphql\\predicateQLType.ts","file://external \"koa-conditional-get\"","file://external \"koa-etag\"","file://external \"falcon-core\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\controllers.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\ElementSetController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\GenericController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\EntityController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\EntityTypeController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\PredicateController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\RecordController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\SourceController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\ElementController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\controllers\\SourceElementController.ts","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\core\\Auth.ts","file://external \"passport-local\"","file://external \"bcrypt\"","file://D:\\imperial-entanglements-dev\\imperial-entanglements\\src\\server\\core\\SqliteSnapshot.ts","file://external \"path\"","file://external \"dotenv\""],"names":[],"mappings":"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","file":"app.backend.dist.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d2389adda95c9060a4e","/**\n * @fileOverview Entry point for server application\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Server } from './core/Server';\nimport { config as loadEnvironmentConfig } from 'dotenv';\nimport { Config as KnexConfig, ConnectionConfig, Sqlite3ConnectionConfig } from 'knex';\n\nloadEnvironmentConfig();\n\nconst server = new Server();\n\nconst databaseConnection : KnexConfig = {\n  useNullAsDefault: true,\n  connection: {}\n};\n\nif (process.env.DB_TYPE === 'sqlite') {\n  databaseConnection.client = 'sqlite3';\n  if (databaseConnection.connection !== undefined ) {\n    (databaseConnection.connection as Sqlite3ConnectionConfig).filename = './data/mydb.sqlite';\n  }\n  databaseConnection.pool = {\n    afterCreate: (conn, cb) => {\n      conn.run('PRAGMA foreign_keys = ON', cb);\n    }\n  };\n}\n\nif (process.env.DB_TYPE === 'postgres') {\n  databaseConnection.client = 'pg';\n  (databaseConnection.connection as ConnectionConfig).host = process.env.DB_HOST;\n  (databaseConnection.connection as ConnectionConfig).user = process.env.DB_USER;\n  (databaseConnection.connection as ConnectionConfig).password = process.env.DB_PASSWORD;\n  (databaseConnection.connection as ConnectionConfig).database = process.env.DB_DATABASE;\n}\n\nserver.init(databaseConnection);\n\nserver.listen();\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/index.ts","/**\n * @fileOverview <Description Missing>\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.1.0\n */\n\nimport * as Koa from 'koa';\nimport * as koaStatic from 'koa-static';\nimport * as KoaRouter from 'koa-router';\nimport * as koaJSON from 'koa-json';\nimport * as koaBodyParser from 'koa-bodyparser';\nimport * as koaQs from 'koa-qs';\nimport * as koaLogger from 'koa-logger';\nimport * as koaSession from 'koa-session';\nimport * as koaConditionalGet from 'koa-conditional-get';\nimport * as koaEtags from 'koa-etag';\nimport * as koaPassport from 'koa-passport';\nimport * as koaMount from 'koa-mount';\nimport * as koaConvert from 'koa-convert';\n\nimport { Config as KnexConfig } from 'knex';\nimport { Database } from './Database';\n\nimport { template } from 'lodash';\nimport { readFileSync } from 'fs';\n\nimport { api, wrapDatabase } from '../routes/api';\nimport { adminApp } from '../routes/adminApp';\nimport { auth  } from '../routes/auth';\nimport { snapshot  } from '../routes/snapshot';\nimport { stats  } from '../routes/stats';\n\nimport { setupAuth } from './Auth';\n\nimport { SqliteSnapshot } from './SqliteSnapshot';\n\nimport { server as frontendApp } from 'imperial-entanglements-frontend';\n\nimport * as path from 'path';\n\nimport * as _ from 'lodash';\n\nexport class Server {\n\n    private app: Koa;\n    private skeleton: _.TemplateExecutor;\n    private apiRoute: string;\n    private adminRoute: string;\n    private adminEditRoute: string;\n\n    private snapshot: SqliteSnapshot;\n\n    public init(databaseConfig: KnexConfig) : void {\n\n        this.app = new Koa();\n\n        this.app.use(koaConvert(koaLogger()));\n        koaQs(this.app, 'strict');\n\n        this.app.use(koaConvert(koaBodyParser()));\n\n        // Sessions\n        this.app.keys = ['secret'];\n        this.app.use(koaConvert(koaSession(this.app)));\n\n        this.app.use(koaPassport.initialize());\n        this.app.use(koaPassport.session());\n\n        this.app.use(koaStatic(path.join(process.cwd(), 'dist', 'server', 'static')));\n\n        this.skeleton = template(readFileSync(path.join(process.cwd(), 'dist', 'server', 'index.html'), 'utf8'));\n\n        this.apiRoute = 'api/v1';\n        this.adminRoute = 'admin';\n        this.adminEditRoute = 'edit';\n\n        const db = new Database(databaseConfig);\n        this.snapshot = new SqliteSnapshot(databaseConfig);\n\n        setupAuth(db);\n\n        //let router = new KoaRouter();\n        // router.use(koaJSON());\n        // router.use(koaBodyParser({\n        //     enableTypes: ['json', 'form', 'text']\n        // }));\n\n        // const serverApiContext = wrapDatabase(db, false);\n        // router = api(router, serverApiContext);\n\n        // router.get('/cat', async (ctx: Koa.Context) => {\n        //   ctx.body = 'meow';\n        // });\n\n        // this.app.use(router.middleware());\n\n        this.app.use(koaMount('/api/v1', api(db)));\n\n        /*\n\n        const admin = new Koa();\n        admin.use(koaMount('/', auth()));\n        admin.use(koaMount('/snapshot', snapshot(this.snapshot)));\n        admin.use(koaMount('/stats', stats(db)));\n        admin.use(koaMount('/', adminApp(this.skeleton, serverApiContext)));\n        this.app.use(koaMount('/admin', admin));\n\n        this.app.use(koaMount('/', frontendApp));\n\n        */\n        this.app.use(async (ctx: Koa.Context) => {\n          ctx.body = '404';\n        });\n    }\n\n    public listen() : void {\n        this.app.listen(8080);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/core/Server.ts","module.exports = require(\"koa\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"koa-static\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-static\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"koa-bodyparser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-bodyparser\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"koa-qs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-qs\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"koa-logger\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-logger\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"koa-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-session\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"koa-passport\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-passport\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"koa-mount\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-mount\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"koa-convert\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-convert\"\n// module id = 10\n// module chunks = 0","/**\n * @fileOverview Abstract interface for sources\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\n\nimport * as Knex from 'knex';\nimport { omit } from 'lodash';\n\nimport { KeyNotFoundException, DatabaseIntegrityError } from './Exceptions';\n\nexport class Database {\n\n    private knex : Knex;\n\n    constructor(config: Knex.Config) {\n        this.knex = Knex(config);\n    }\n\n    public query() : Knex {\n        return this.knex;\n    }\n\n    public select(tableName: string, options: string[] | '*' = '*') {\n        return this.knex.select().from(tableName);\n    }\n\n    public loadItem(a: string, uid: number) : Promise<any> {\n        const query = this.knex.select()\n            .from(a)\n            .where({ uid: uid })\n            .first();\n\n        return query.then((result) => result === undefined ? Promise.reject(new KeyNotFoundException()) : result);\n    }\n\n    public loadCollection(a: string, params: Object) : Promise<any[]> {\n        let query = this.knex.select()\n            .from(a);\n\n        Object.keys(params).forEach((param) => {\n            query = query.whereIn(param, params[param]);\n        });\n\n        return query.then((results) => results === undefined ? Promise.reject(new KeyNotFoundException()) : results);\n    }\n\n    public createItem(tableName: string, data: any) : Promise<any> {\n        // throw warning if called with uid\n        // validate that everything else has been sent\n        const withoutUid = omit(data, ['uid']);\n\n        return this.knex.transaction((trx) => {\n            return this.knex(tableName).transacting(trx).insert(withoutUid, 'uid').returning('uid')\n            .then((results) => {\n                return this.checkIntegrity(trx)\n                .then((valid) => {\n                    if (!valid) {\n                        throw new DatabaseIntegrityError();\n                    }\n                    return results;\n                });\n            })\n            .then(trx.commit)\n            .catch(trx.rollback);\n        });\n    }\n\n    public updateItem(tableName: string, data: any) : Promise<any> {\n        // assert - must have uid\n        // validation?\n        return this.knex.transaction((trx) => {\n            return this.knex(tableName).transacting(trx)\n            .where({ 'uid': data.uid })\n            .update(data)\n            .then((results) => {\n                return this.checkIntegrity(trx)\n                .then((valid) => {\n                    if (!valid) {\n                        throw new DatabaseIntegrityError();\n                    }\n                    return results;\n                });\n            })\n            .then(trx.commit)\n            .catch(trx.rollback);\n        });\n    }\n\n    public deleteItem(tableName: string, uid: number) : Promise<any> {\n\n        return this.knex.transaction((trx) => {\n            return this.knex(tableName).transacting(trx)\n            .where({ uid })\n            .del()\n            .then((results) => {\n                return this.checkIntegrity(trx)\n                .then((valid) => {\n                    if (!valid) {\n                        throw new DatabaseIntegrityError();\n                    }\n                    return results;\n                });\n            })\n            .then(trx.commit)\n            .catch(trx.rollback);\n        });\n    }\n\n    public getAncestorsOf(uid: number, tableName: string) : Promise<number[]> {\n        return this.knex.raw(`\n            WITH RECURSIVE parent_of(uid, parent) AS  (SELECT uid, parent FROM ${tableName}),\n                ancestor(uid) AS (\n                SELECT parent FROM parent_of WHERE uid=${uid}\n                UNION ALL\n                SELECT parent FROM parent_of JOIN ancestor USING(uid) )\n\t\t\t\tSELECT * from ancestor`)\n            .then((result) => {\n                return result.filter((a) => a.uid !== null).map((a) => a.uid);\n            });\n    }\n\n    public getChildrenOf(uid: number, tableName: string) : Promise<number[]> {\n        return this.knex.raw(`\n            WITH RECURSIVE parent_of(uid, parent) AS  (SELECT uid, parent FROM ${tableName}),\n                ancestor(parent) AS (\n                SELECT uid FROM parent_of WHERE uid=${uid}\n                UNION ALL\n                SELECT uid FROM parent_of JOIN ancestor USING(parent) )\n\t\t\t\tSELECT * from ancestor`)\n            .then((result) => {\n                return result.filter((a) => a.parent !== null).map((a) => a.parent);\n            });\n    }\n\n    public checkIntegrity(trx: Knex.Transaction) : Promise<boolean> {\n        return Promise.all([\n            this.knex.transacting(trx).select(this.knex.raw('SUM((records.value_type != predicates.range_type)) AS valid'))\n            .from('records')\n            .innerJoin('predicates', 'records.predicate', 'predicates.uid'),\n\n            this.knex.transacting(trx).select(this.knex.raw(`\n                SUM((\n\n                entities.type not in (\n                    WITH RECURSIVE parent_of(uid, parent) AS  (SELECT uid, parent FROM entity_types),\n                                ancestor(parent) AS (\n                                SELECT uid FROM parent_of WHERE uid=predicates.range_ref\n                                UNION ALL\n                                SELECT uid FROM parent_of JOIN ancestor USING(parent) )\n                                SELECT * from ancestor\n                )\n\n                )) as valid\n            `))\n            .from('records')\n            .innerJoin('predicates', 'records.predicate', 'predicates.uid')\n            .innerJoin('entities', 'entities.uid', 'records.value_entity')\n            .where('records.value_type', '=', 'entity'),\n\n            this.knex.transacting(trx).select(this.knex.raw(`\n               SUM((\n\n                entities.type not in (\n                    WITH RECURSIVE parent_of(uid, parent) AS  (SELECT uid, parent FROM entity_types),\n                                ancestor(parent) AS (\n                                SELECT uid FROM parent_of WHERE uid=predicates.domain\n                                UNION ALL\n                                SELECT uid FROM parent_of JOIN ancestor USING(parent) )\n                                SELECT * from ancestor\n                )\n\n                )) as valid\n            `))\n            .from('records')\n            .innerJoin('predicates', 'records.predicate', 'predicates.uid')\n            .innerJoin('entities', 'entities.uid', 'records.entity')\n\n          ]).then(([[a], [b], [c]]) => {\n            return (a.valid + b.valid + c.valid) === 0;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/core/Database.ts","module.exports = require(\"knex\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"knex\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 13\n// module chunks = 0","/**\n * @fileOverview <Description Missing>\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.1.0\n */\n\nexport class KeyNotFoundException extends Error {\n    public data: string;\n    constructor(message: string = 'Could not find the given key') {\n        super(message);\n        this.data = message;\n    }\n}\n\nexport class CollectionNotFoundException extends Error {\n    public data: string;\n    constructor(message: string = 'Could not find the given collection') {\n        super(message);\n        this.data = message;\n    }\n}\n\nexport class OperationNotPermittedException extends Error {\n    public data: { message: string, data: any};\n    constructor(data: { message: string, data: any}) {\n        super(data.message);\n        this.data = data;\n    }\n}\n\nexport class DatabaseIntegrityError extends Error {\n    public data: string;\n    constructor(message: string = `A database integrity constraint has been broken - your change has not been\n submitted. This is likely due to a change which violates the property types model; please check the types of \n what you are trying to do. Please also contact the Digital Humanities team, this error should not occur.`) {\n        super(message);\n        this.data = message;\n    }\n}\n\n\nexport const exceptions = {\n    KeyNotFoundException,\n    CollectionNotFoundException,\n    OperationNotPermittedException,\n    DatabaseIntegrityError\n};\n\n\n// WEBPACK FOOTER //\n// ./src/server/core/Exceptions.ts","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 15\n// module chunks = 0","/**\n * @fileOverview Map of URIs to controllers\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\n// Vendor\nimport * as Koa from 'koa';\nimport * as KoaRouter from 'koa-router';\nimport * as koaJSON from 'koa-json';\nimport * as koaBodyParser from 'koa-bodyparser';\n\n// Database\nimport { Database } from '../core/Database';\nimport { ServerApiService, AppUrls } from '../core/ServerApiService';\nimport { QueryEngine } from '../core/QueryEngine';\n\nimport * as koaConditionalGet from 'koa-conditional-get';\nimport * as koaEtags from 'koa-etag';\n\nimport { Serializer, TrackedFalconItem } from 'falcon-core';\n\n// Controllers\nimport { IController } from '../controllers/IController';\n\nimport {\n    EntityController,\n    EntityTypeController,\n    ElementSetController,\n    PredicateController,\n    SourceController,\n    RecordController,\n    ElementController,\n    SourceElementController\n} from '../controllers/controllers';\n\nimport {\n  Entity, EntityType, ElementSet, Predicate, Source, Record, Element, SourceElement\n} from 'falcon-core';\n\nexport const wrapDatabase : (s: Database, fakeCreator: boolean) => ServerApiService =\n    (db: Database, fakeCreator: boolean) => {\n    const routes = new Map<string, IController>([\n        [AppUrls.element_set, new ElementSetController(db)],\n        [AppUrls.record, new RecordController(db)],\n        [AppUrls.entity_type, new EntityTypeController(db)],\n        [AppUrls.entity, new EntityController(db)],\n        [AppUrls.predicate, new PredicateController(db)],\n        [AppUrls.source, new SourceController(db)],\n        [AppUrls.element, new ElementController(db)],\n        [AppUrls.source_element, new SourceElementController(db)]\n    ]);\n\n    return new ServerApiService(db, routes, new QueryEngine(db), fakeCreator);\n};\n\nconst sourceElementSpecial = (router: any, serverApiContext: ServerApiService, typeMap: any) => {\n\n  router.use(koaConditionalGet());\n  router.use(koaEtags());\n\n    router.get(`/${AppUrls.source_element}/:source/:element`, function* (ctx : Koa.Context) {\n        yield serverApiContext\n            .getItem<TrackedFalconItem>(typeMap[AppUrls.source_element], AppUrls.source_element, {\n                order: ['source', 'element'],\n                values: {\n                    source: ctx.params.source,\n                    element: ctx.params.element\n                }\n            })\n            .then((data) => ctx.body = Serializer.toJson(data));\n    });\n\n    router.put(`/${AppUrls.source_element}/:source/:element`, function* (ctx : Koa.Context) {\n        yield serverApiContext\n            .putItem<TrackedFalconItem>(typeMap[AppUrls.source_element], AppUrls.source_element, {\n                order: ['source', 'element'],\n                values: {\n                    source: ctx.params.source,\n                    element: ctx.params.element\n                }\n            }, ctx.request.body)\n            .then((data) => ctx.body = data);\n    });\n\n    router.patch(`/${AppUrls.source_element}/:source/:element`, function* (ctx : Koa.Context) {\n        yield serverApiContext\n            .patchItem<TrackedFalconItem>(typeMap[AppUrls.source_element], AppUrls.source_element, {\n                order: ['source', 'element'],\n                values: {\n                    source: ctx.params.source,\n                    element: ctx.params.element\n                }\n            }, ctx.request.body)\n            .then((data) => ctx.body = data);\n    });\n\n    router.del(`/${AppUrls.source_element}/:source/:element`, function* (ctx : Koa.Context) {\n        yield serverApiContext\n            .delItem<TrackedFalconItem>(typeMap[AppUrls.source_element], AppUrls.source_element, {\n                order: ['source', 'element'],\n                values: {\n                    source: ctx.params.source,\n                    element: ctx.params.element\n                }\n            })\n            .then((data) => ctx.body = data);\n    });\n};\n\n// would be cleaner if it allowed 2nd level REST urls\n//  /entity/{entity_id}/predicate/{predicate_id}\n// /source/{source_id}/element/{element_id}\n\nconst typeMap = {\n    [AppUrls.element_set]: ElementSet,\n    [AppUrls.record]: Record,\n    [AppUrls.entity_type]: EntityType,\n    [AppUrls.entity]: Entity,\n    [AppUrls.predicate] : Predicate,\n    [AppUrls.source] : Source,\n    [AppUrls.element] : Element,\n    [AppUrls.source_element]: SourceElement\n};\n\nexport const api = (db: Database) : Koa => {\n\n    const server = new Koa();\n    const router = new KoaRouter();\n\n    // router.use(koaJSON());\n    // router.use(koaBodyParser({\n    //     enableTypes: ['json', 'form', 'text']\n    // }));\n\n    const serverApiContext = wrapDatabase(db, false);\n\n    router.use(async (ctx: Koa.Context, next: any) => {\n        if (ctx.req.method === 'GET' || ctx.isAuthenticated()) {\n            return await next();\n        } else {\n            ctx.status = 403;\n            ctx.body = 'You must be authorised to modify this resource';\n        }\n    });\n\n    router.use(async (ctx: Koa.Context, next: any) => {\n        try {\n            return await next();\n        } catch (err) {\n            switch (err.constructor.name) {\n                case 'KeyNotFoundException':\n                    ctx.status = 404;\n                    break;\n                case 'CollectionNotFoundException':\n                    ctx.status = 404;\n                    break;\n                case 'OperationNotPermittedException':\n                    ctx.status = 422;\n                    break;\n                default:\n                    ctx.status = 500;\n            }\n            ctx.type = 'application/json';\n            if ( err.data !== undefined) {\n                return await err.data.data.then((data) => {\n                    ctx.body = JSON.stringify(Object.assign({}, err.data, { data: data }));\n                });\n            } else {\n                ctx.body = err.message;\n            }\n        }\n    });\n\n    router.get('/query', async (ctx : Koa.Context) => {\n      ctx.body = await serverApiContext.queryEngine.runQuery(ctx.query.query);\n    });\n\n    sourceElementSpecial(router, serverApiContext, typeMap);\n\n    router.get('/:route/:id', async (ctx : Koa.Context) => {\n\n        const data = await serverApiContext\n            .getItem<any>(typeMap[ctx.params.route], ctx.params.route, parseInt(ctx.params.id));\n\n        ctx.body = Serializer.toJson(data);\n    });\n\n\n    router.get('/:route', async (ctx : Koa.Context) => {\n        const data = await serverApiContext\n            .getCollection<any>(typeMap[ctx.params.route], ctx.params.route, ctx.query);\n\n        ctx.body = data.map((datum) => Serializer.toJson(datum));\n    });\n\n    router.post('/:route', async (ctx : Koa.Context) => {\n        const data = await serverApiContext\n            .postItem<any>(typeMap[ctx.params.route], ctx.params.route,\n              Serializer.fromJson(typeMap[ctx.params.route], Object.assign(ctx.request.body, {\n                creator: ctx.req.user.uid\n            })));\n\n        ctx.body = data;\n    });\n\n    router.put('/:route/:id', async (ctx : Koa.Context) => {\n        const data = await serverApiContext\n            .putItem<any>(typeMap[ctx.params.route], ctx.params.route, parseInt(ctx.params.id),\n            Serializer.fromJson(typeMap[ctx.params.route],ctx.request.body));\n\n        ctx.body = data;\n    });\n\n    router.patch('/:route/:id', async (ctx : Koa.Context) => {\n        const data = await serverApiContext\n            .patchItem<any>(typeMap[ctx.params.route], ctx.params.route, parseInt(ctx.params.id), ctx.request.body);\n\n        ctx.body = data;\n    });\n\n    router.del('/:route/:id', async (ctx : Koa.Context) => {\n        const data = await serverApiContext\n            .delItem<any>(typeMap[ctx.params.route], ctx.params.route, parseInt(ctx.params.id));\n\n        ctx.body = data;\n    });\n\n    server.use(router.routes());\n    server.use(router.allowedMethods());\n\n    return server;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/routes/api.ts","module.exports = require(\"koa-router\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-router\"\n// module id = 17\n// module chunks = 0","/**\n * @fileOverview Abstract interface for sources\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { ApiService } from '../../common/ApiService';\n\nimport { IController } from '../controllers/IController';\nimport { CollectionNotFoundException } from './Exceptions';\n\nimport { QueryEngine } from './QueryEngine';\n\nimport { CompositeKey, TrackedFalconItem, Serializer } from 'falcon-core';\n\nimport * as moment from 'moment';\n\nimport { triggerReload } from '../../common/Signaller';\n\nexport { AppUrls } from '../../common/ApiService';\n\nimport { Database } from './Database';\n\nimport { GeneralStatisticsController } from '../stats/GeneralStatisticsController';\n\nexport class ServerApiService implements ApiService {\n\n    private controllerMap: Map<string, IController>;\n    private db: Database;\n\n    public queryEngine: QueryEngine;\n    public fakeCreator: boolean;\n\n    constructor(db: Database, routesMap: Map<string, IController>, queryEngine: QueryEngine, fakeCreator: boolean) {\n        this.controllerMap = routesMap;\n        this.queryEngine = queryEngine;\n        this.fakeCreator = fakeCreator;\n        this.db = db;\n    }\n\n    public getItem<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, uid: number | CompositeKey) : Promise<T> {\n        const controller = this.controllerMap.get(baseUrl);\n        if (controller === undefined) {\n            return Promise.reject(new CollectionNotFoundException('Controller not found'));\n        }\n        return controller.getItemJson<T>(obj, uid);\n    }\n\n    public getCollection<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, params: any) : Promise<T[]> {\n        const controller = this.controllerMap.get(baseUrl);\n        if (controller === undefined) {\n            return Promise.reject(new CollectionNotFoundException('Controller not found'));\n        }\n        return controller.getCollectionJson<T>(obj, params);\n    }\n\n    public postItem<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, data: T)  : Promise<boolean> {\n        const controller = this.controllerMap.get(baseUrl);\n        if (controller === undefined) {\n            return Promise.reject(new CollectionNotFoundException('Controller not found'));\n        }\n        return controller.postItem<T>(obj, Object.assign(data, {\n            creationTimestamp: moment().toISOString(),\n            lastmodifiedTimestamp: moment().toISOString(),\n            creator: this.fakeCreator ? 0 : data.creator\n        }))\n        .then((result) => {\n            triggerReload.dispatch();\n            return Promise.resolve(result);\n        });\n    }\n\n    public putItem<T extends TrackedFalconItem>(obj: { new(): T; },\n            baseUrl : string, uid: number | CompositeKey, data: T) : Promise<boolean> {\n\n        const controller = this.controllerMap.get(baseUrl);\n        if (controller === undefined) {\n            return Promise.reject(new CollectionNotFoundException('Controller not found'));\n        }\n        return controller.putItem<T>(obj, uid, Object.assign(data, {\n            lastmodifiedTimestamp: moment().toISOString()\n        }))\n        .then((result) => {\n            triggerReload.dispatch();\n            return Promise.resolve(result);\n        });\n    }\n\n    public patchItem<T extends TrackedFalconItem>(obj: { new(): T; },\n            baseUrl : string, uid: number | CompositeKey, data : any) : Promise<boolean> {\n\n        const controller = this.controllerMap.get(baseUrl);\n        if (controller === undefined) {\n            return Promise.reject(new CollectionNotFoundException('Controller not found'));\n        }\n        return controller.patchItem<T>(obj, uid, Object.assign(data, {\n            lastmodifiedTimestamp: moment().toISOString()\n        }))\n        .then((result) => {\n            triggerReload.dispatch();\n            return Promise.resolve(result);\n        });\n    }\n\n    public delItem<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, uid: number | CompositeKey) {\n        const controller = this.controllerMap.get(baseUrl);\n        if (controller === undefined) {\n            return Promise.reject(new CollectionNotFoundException('Controller not found'));\n        }\n        return controller.deleteItem<T>(obj, uid)\n        .then((result) => {\n            triggerReload.dispatch();\n            return Promise.resolve(result);\n        });\n    }\n\n\n    public query(graphQLQuery: string) : Promise<any> {\n        return Promise.resolve({});\n    }\n\n    public getStats() : Promise<any> {\n      return GeneralStatisticsController(this.db.query());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/core/ServerApiService.ts","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 19\n// module chunks = 0","/**\n * @fileOverview <Description Missing>\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.1.0\n */\n\nimport * as signals from 'signals';\n\nexport const createTab = new signals.Signal();\nexport const closeTab = new signals.Signal();\nexport const showModal = new signals.Signal();\nexport const triggerReload = new signals.Signal();\nexport const showToast  = new signals.Signal();\n\nexport const Signaller = {\n    createTab,\n    closeTab,\n    showModal,\n    triggerReload,\n    showToast\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/Signaller.ts","module.exports = require(\"signals\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"signals\"\n// module id = 21\n// module chunks = 0","/**\n * @fileOverview <Description Missing>\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.1.0\n */\n\nimport { TrackedFalconItem, CompositeKey } from 'falcon-core';\n\nimport { itemTypes } from './itemTypes';\n\nexport const AppUrls : {\n    element_set: string,\n    record: string,\n    entity: string,\n    entity_type: string,\n    predicate: string,\n    source: string,\n    source_element: string,\n    element: string\n} = {\n    element_set: itemTypes.element_set.machineName,\n    record:  itemTypes.record.machineName,\n    entity:  itemTypes.entity.machineName,\n    entity_type:  itemTypes.entity_type.machineName,\n    predicate:  itemTypes.predicate.machineName,\n    source:  itemTypes.source.machineName,\n    source_element:  itemTypes.source_element.machineName,\n    element: 'element'\n};\n\nexport interface ApiService {\n    getItem<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, uid: number | CompositeKey) : Promise<T>;\n    getCollection<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, params: any) : Promise<T[]>;\n\n    postItem<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, data: T) : Promise<any>;\n    putItem<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, uid: number | CompositeKey, data: T) : Promise<any>;\n\n    //TODO: patch item takes a subset of an objects properties. This is currently being looked at in TS in the\n    //context of the 'setState' function in react\n    patchItem<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, uid: number | CompositeKey, data : any) : Promise<any>;\n    delItem<T extends TrackedFalconItem>(obj: { new(): T; }, baseUrl : string, uid: number | CompositeKey) : Promise<any>;\n\n    query(graphQLQuery: string) : Promise<any>;\n    getStats() : Promise<any>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/ApiService.ts","/**\n * @fileOverview <Description Missing>\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.1.0\n */\n\ninterface ItemDescription {\n    machineName: string;\n    name: string;\n    plural: string;\n    workspace: string;\n}\n\ninterface ItemTypes {\n    element_set: ItemDescription;\n    record: ItemDescription;\n    entity: ItemDescription;\n    entity_type: ItemDescription;\n    predicate: ItemDescription;\n    source: ItemDescription;\n    source_element: ItemDescription;\n}\n\nexport const itemTypes : ItemTypes = {\n\n    element_set: {\n        machineName: 'element_set',\n        name: 'Element Set',\n        plural: 'Element Sets',\n        workspace: ''\n    },\n\n    record: {\n        machineName: 'record',\n        name: 'Record',\n        plural: 'Records',\n        workspace: ''\n    },\n\n    entity:  {\n        machineName: 'entity',\n        name: 'Entity',\n        plural: 'Entities',\n        workspace: 'entity'\n    },\n\n    entity_type: {\n        machineName: 'entity_type',\n        name: 'Entity Type',\n        plural: 'Entity Types',\n        workspace: 'entity_type'\n    },\n\n    predicate: {\n        machineName: 'property',\n        name: 'Property',\n        plural: 'Properties',\n        workspace: 'predicate'\n    },\n\n    source: {\n        machineName: 'source',\n        name: 'Source',\n        plural: 'Sources',\n        workspace: 'source'\n    },\n\n    source_element: {\n        machineName: 'source_element',\n        name: 'Source Element',\n        plural: 'Source Elements',\n        workspace: ''\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/common/itemTypes.ts","/**\n * @fileOverview Map of URIs to controllers\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport * as Knex from 'knex';\n\nimport { GeneralStatistics } from '../../common/stats/GeneralStatistics';\n\nexport const GeneralStatisticsController = (db : Knex) : Promise<GeneralStatistics> => {\n\n    return Promise.all([\n      db('entities').count(),\n      db('entity_types').count(),\n      db('sources').count(),\n      db('records').count(),\n      db('predicates').count()\n    ]).then(([[entityCount], [entityTypeCount], [sourceCount], [recordCount], [predicateCount]]) => {\n\n      const statistics : GeneralStatistics = {\n        entity: entityCount['count(*)'],\n        entityType: entityTypeCount['count(*)'],\n        source: sourceCount['count(*)'],\n        record: recordCount['count(*)'],\n        predicate: predicateCount['count(*)']\n      };\n\n      return statistics;\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/stats/GeneralStatisticsController.ts","/**\n * @fileOverview Query processor\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport {\n  graphql,\n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLList\n} from 'graphql';\n\nimport { Database } from './Database';\n\nimport { entityQLType } from '../graphql/entityQLType';\nimport { predicateQLType } from '../graphql/predicateQLType';\n\nexport class QueryEngine {\n\n    private schema: GraphQLSchema;\n\n    constructor(db: Database) {\n\n        const entityType = entityQLType(db, predicateQLType(db));\n\n        // Define the Query type\n        const queryType = new GraphQLObjectType({\n            name: 'Query',\n            fields: {\n                entity: {\n                    type: new GraphQLList(entityType),\n                    // `args` describes the arguments that the `user` query accepts\n                    args: {\n                        uid: { type: GraphQLString }\n                    },\n                    resolve: (_, {uid}) => {\n                        if (uid === undefined) {\n                            return db.query()('entities');\n                        }\n                        return db.query()('entities').where({ uid });\n                    }\n                }\n            }\n        });\n\n        this.schema = new GraphQLSchema({\n            query: queryType\n        });\n    }\n\n    public runQuery(query: any) : Promise<any> {\n        return graphql(this.schema, query);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/server/core/QueryEngine.ts","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 26\n// module chunks = 0","/**\n * @fileOverview Query processor\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport {\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLList\n} from 'graphql';\n\nimport { Database } from '../core/Database';\n\nexport const entityQLType = (db: Database, predicateType: GraphQLObjectType) : GraphQLObjectType => {\n    return new GraphQLObjectType({\n        name: 'Entity',\n        fields: {\n\n            uid: {\n                type: GraphQLString,\n                resolve: (parent, {}) => {\n                    return parent.uid;\n                }\n            },\n\n            label: {\n                type: GraphQLString,\n                resolve: (parent, {}) => {\n                    return parent.label;\n                }\n            },\n\n            type: {\n                type: GraphQLString,\n                resolve: (parent, {}) => {\n                    return db.query()('entity_types').where({ uid: parent.type }).first().then((data) => data.label);\n                }\n            },\n\n            predicate: {\n                type: predicateType,\n                args: {\n                    name: { type: GraphQLString },\n                    uid: { type: GraphQLString }\n                },\n                resolve: (entity, {name, uid}) => {\n                    if (name !== undefined) {\n                        return db.query()('predicates').where({ name }).first().then((predicate) => ({ predicate, entity }));\n                    }\n                    if (uid !== undefined) {\n                        return db.query()('predicates').where({ uid }).first().then((predicate) => ({ predicate, entity }));\n                    }\n                }\n            },\n\n            predicates: {\n                type: new GraphQLList(predicateType),\n                args: {\n                    names: { type: new GraphQLList(GraphQLString) },\n                    uids: { type: new GraphQLList(GraphQLString) }\n                },\n                resolve: (entity, {names, uids}) => {\n                    if (names !== undefined) {\n                        return db.query()('predicates')\n                            .whereIn('name', names)\n                            .then((predicates) => predicates.map((predicate) => ({ predicate, entity })));\n                    }\n                    if (uids !== undefined) {\n                        return db.query()('predicates')\n                            .whereIn('uid', uids)\n                            .then((predicates) => predicates.map((predicate) => ({ predicate, entity })));\n                    }\n                }\n            }\n        }\n    });\n};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/graphql/entityQLType.ts","/**\n * @fileOverview Query processor\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport {\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLList\n} from 'graphql';\n\nimport { Database } from '../core/Database';\n\nexport const predicateQLType = (db: Database) : GraphQLObjectType => {\n        return new GraphQLObjectType({\n        name: 'Predicate',\n        fields: {\n\n            uid: {\n                type: GraphQLString,\n                resolve: ({ predicate }, {}) => {\n                    return predicate.uid;\n                }\n            },\n\n            name: {\n                type: GraphQLString,\n                resolve: ({ predicate }, {}) => {\n                    return predicate.label;\n                }\n            },\n\n            values: {\n                type: new GraphQLList(GraphQLString),\n                resolve: ({ entity, predicate }, {}) => {\n                    return db.query()('records')\n                    .select('value_string')\n                    .where({ entity: entity.uid, predicate: predicate.uid })\n                    .then((results) => results.map((result) => result.value_string));\n                }\n            }\n        }\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/graphql/predicateQLType.ts","module.exports = require(\"koa-conditional-get\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-conditional-get\"\n// module id = 29\n// module chunks = 0","module.exports = require(\"koa-etag\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"koa-etag\"\n// module id = 30\n// module chunks = 0","module.exports = require(\"falcon-core\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"falcon-core\"\n// module id = 31\n// module chunks = 0","/**\n * @fileOverview Collated list of controllers\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nexport { ElementSetController } from './ElementSetController';\nexport { EntityController } from './EntityController';\nexport { EntityTypeController } from './EntityTypeController';\nexport { PredicateController } from './PredicateController';\nexport { RecordController } from './RecordController';\nexport { SourceController } from './SourceController';\nexport { ElementController } from './ElementController';\nexport { SourceElementController } from './SourceElementController';\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/controllers.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Database } from '../core/Database';\n\nimport { ElementSet, Serializer } from 'falcon-core';\nimport { GenericController } from './GenericController';\n\nimport { omit } from 'lodash';\n\nexport class ElementSetController extends GenericController<ElementSet> {\n\n    constructor(db : Database) {\n        super(db, 'element_sets');\n    }\n\n    public static toSchema(data: ElementSet) : any {\n        return omit(Serializer.toJson(data), 'elements');\n    }\n\n    public static fromSchema(data: any) : ElementSet {\n        return { ... Object.create(ElementSet.prototype), ... data};\n        // return Object.assign(Object.create(ElementSet.prototype), data);\n    }\n\n    protected toSchema(data: ElementSet) : any {\n        return ElementSetController.toSchema(data);\n    }\n\n    protected fromSchema(data: any) : ElementSet {\n        return ElementSetController.fromSchema(data);\n    }\n\n    public getItemJson(obj: { new(): ElementSet }, uid: number) : Promise<ElementSet> {\n        return super.getItemJson(obj, uid)\n        .then((elementSet) => {\n\n            if (elementSet.uid === null) {\n                throw new Error('could not find source');\n            }\n\n            return this.db.select('elements')\n                .where({ 'element_set': elementSet.uid })\n                .then((elements) => {\n                    elementSet.elements = elements;\n                    return elementSet;\n                });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/ElementSetController.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { IController } from './IController';\nimport { Database } from '../core/Database';\n\nimport { CompositeKey, FalconItem } from 'falcon-core';\n\nexport abstract class GenericController<T extends FalconItem> implements IController {\n\n    protected tableName: string;\n    protected db : Database;\n\n    constructor(\n        db: Database,\n        table: string) {\n        this.db = db;\n        this.tableName = table;\n    }\n\n    protected abstract fromSchema(data: any) : T;\n    protected abstract toSchema(data: T) : any;\n\n\n    public getItemJson(obj: { new(): T; }, uid: number | CompositeKey) : Promise<T> {\n\n        if (typeof(uid) !== 'number') {\n            throw new Error('Expected single column identifier');\n        }\n\n        return this.db.loadItem(this.tableName, uid)\n        .then((data) => this.fromSchema(data));\n    }\n\n    public getCollectionJson(obj: { new(): T; }, params: any = {}) : Promise<T[]> {\n        return this.db.loadCollection(this.tableName, params)\n         .then((data) => data.map((datum) =>  this.fromSchema(datum)));\n    }\n\n    public postItem(obj: { new(): T; }, data: T) : Promise<any> {\n        return this.db.createItem(this.tableName, this.toSchema(data));\n    }\n\n    public putItem(obj: { new(): T; }, uid: number | CompositeKey, data: T) : Promise<string> {\n\n        if (typeof(uid) !== 'number') {\n            throw new Error('Expected single column identifier');\n        }\n\n        return this.db.updateItem(this.tableName, this.toSchema(data));\n    }\n\n    public patchItem(obj: { new(): T; }, uid: number | CompositeKey, data: T) : Promise<boolean> {\n\n        if (typeof(uid) !== 'number') {\n            throw new Error('Expected single column identifier');\n        }\n\n        return this.db.loadItem(this.tableName, uid)\n        .then((originalData) => {\n            return this.db.updateItem(this.tableName, this.toSchema(Object.assign(this.fromSchema(originalData), data)));\n        });\n    }\n\n    public deleteItem(obj: { new(): T; }, uid: number | CompositeKey) : Promise<string> {\n\n        if (typeof(uid) !== 'number') {\n            throw new Error('Expected single column identifier');\n        }\n\n        return this.db.deleteItem(this.tableName, uid);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/GenericController.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Database } from '../core/Database';\n\nimport { Entity, Serializer } from 'falcon-core';\nimport { GenericController } from './GenericController';\n\nimport { OperationNotPermittedException } from '../core/Exceptions';\n\nimport { omit, isArray } from 'lodash';\n\nexport class EntityController extends GenericController<Entity> {\n\n    constructor(db : Database) {\n        super(db, 'entities');\n    }\n\n    public static fromSchema(data: any) : Entity {\n        return Object.assign(Object.create(Entity.prototype), {\n            entityType: data.type,\n            uid: data.uid,\n            label: data.label,\n            parent: data.parent\n        });\n    }\n\n    public static toSchema(data: Entity) : any {\n       return Object.assign(omit(Serializer.toJson(data),\n            'entityType',\n            'creationTimestamp',\n            'lastmodifiedTimestamp'), {\n            type: data.entityType,\n            creation_timestamp: data.creationTimestamp,\n            lastmodified_timeStamp: data.lastmodifiedTimestamp\n        });\n    }\n\n    protected fromSchema(data: any) : Entity {\n        return EntityController.fromSchema(data);\n    }\n\n    protected toSchema(data: Entity) : any {\n       return EntityController.toSchema(data);\n    }\n\n    public async getCollectionJson(obj: { new(): Entity; }, params: any = {}) : Promise<Entity[]>  {\n        if (params.type !== undefined) {\n\n          const ancestorTypes = await this.db.getChildrenOf(isArray(params.type) ? params.type[0] : params.type, 'entity_types');\n\n          return this.db.select('entities')\n            .whereIn('type', ancestorTypes)\n            .then((rawEntities) => rawEntities.map((entity) => this.fromSchema(entity)));\n\n        } else {\n            return super.getCollectionJson(obj, params);\n        }\n    }\n\n    public async deleteItem(obj: { new(): Entity; }, uid: number) : Promise<string> {\n        // check if this entity is the parent of another entity or if it has any relationships\n        // pointing towards it.\n\n        const [entities, records] = await Promise.all([\n          this.db.select(this.tableName).where('parent', '=', uid),\n          this.db.select('records').where('value_entity', '=', uid)\n        ]);\n\n        if (entities.length + records.length === 0) {\n            return this.db.deleteItem(this.tableName, uid);\n        } else {\n            throw new OperationNotPermittedException({\n                message: 'The operation could not be completed as the entity is referenced in other sources',\n                data: Promise.resolve({\n                    entity: entities,\n                    record: records\n                })\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/EntityController.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Database } from '../core/Database';\n\nimport { EntityType, Serializer } from 'falcon-core';\nimport { GenericController } from './GenericController';\n\nimport { PredicateController } from './PredicateController';\n\nimport { EntityController } from './EntityController';\n\nimport { OperationNotPermittedException } from '../core/Exceptions';\n\nimport { omit } from 'lodash';\n\nexport class EntityTypeController extends GenericController<EntityType> {\n\n    constructor(db : Database) {\n        super(db, 'entity_types');\n    }\n\n    public toSchema(data: EntityType) {\n        return Object.assign(omit(Serializer.toJson(data),\n                'sameAs',\n                'parents',\n                'children',\n                'creationTimestamp',\n                'lastmodifiedTimestamp'), {\n            same_as: data.sameAs,\n            creation_timestamp: data.creationTimestamp,\n            lastmodified_timeStamp: data.lastmodifiedTimestamp\n        });\n    }\n\n    public fromSchema(data: any) : EntityType {\n        return Object.assign(Object.create(EntityType.prototype), Object.assign(data, {\n            'sameAs': data.same_as\n        }));\n    }\n\n    public getItemJson(obj: { new(): EntityType; }, uid: number) : Promise<EntityType> {\n        return super.getItemJson(obj, uid)\n        .then((result) => {\n            return Promise.all([\n\n                this.db.getAncestorsOf(uid, 'entity_types')\n                .then((ancestors) => {\n                    return this.db.select('entity_types').whereIn('uid', ancestors)\n                    .then((results) => results.map((result) => this.fromSchema(result)));\n                }),\n\n                this.db.select('entity_types', ['uid']).where({ parent: uid })\n            ])\n            .then(([parents, children]) => {\n                result.parents = parents;\n                result.children = children.map((child) => child.uid);\n                return result;\n            });\n        });\n    }\n\n    public async deleteItem(obj: { new(): EntityType; }, uid: number) : Promise<string> {\n        // check if this entity is the parent of another entity or if it has any relationships\n        // pointing towards it.\n\n        const [entityTypes, entities, predicates] = await Promise.all([\n            this.db.select(this.tableName).where('parent', '=', uid),\n            this.db.select('entities').where('type', '=', uid),\n            this.db.select('predicates').where('domain', '=', uid).orWhere('range_ref', '=', uid)\n        ]);\n\n\n        if (entities.length + entityTypes.length + predicates.length === 0) {\n            return this.db.deleteItem(this.tableName, uid);\n        } else {\n            throw new OperationNotPermittedException({\n                message: 'The operation could not be completed as the entity is referenced in other sources',\n                data: Promise.resolve({\n                    entityType: entityTypes.map((entityType) => EntityController.fromSchema(entityType)),\n                    entity: entities.map((entity) => EntityController.fromSchema(entity)),\n                    predicate: predicates.map((predicate) => PredicateController.fromSchema(predicate))\n                })\n            });\n        }\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/EntityTypeController.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Database } from '../core/Database';\n\nimport { Predicate, Serializer } from 'falcon-core';\n\nimport { GenericController } from './GenericController';\n\nimport { OperationNotPermittedException } from '../core/Exceptions';\n\nimport { RecordController } from './RecordController';\n\nimport { omit, isArray } from 'lodash';\n\nexport class PredicateController extends GenericController<Predicate> {\n\n    constructor(db : Database) {\n        super(db, 'predicates');\n    }\n\n    public static toSchema(data: Predicate) {\n        const out : { [s: string] : any } = Object.assign(omit(Serializer.toJson(data),\n            'range',\n            'rangeIsReference',\n            'sameAs',\n            'creationTimestamp',\n            'lastmodifiedTimestamp'\n        ), {\n            same_as: data.sameAs,\n            range_type: data.rangeIsReference ? 'entity' : data.range,\n            creation_timestamp: data.creationTimestamp,\n            lastmodified_timeStamp: data.lastmodifiedTimestamp\n        });\n\n        if (data.rangeIsReference) {\n            out['range_ref'] = data.range;\n        } else {\n            out['range_ref'] = null;\n        }\n\n        return out;\n    }\n\n    public static fromSchema(data: any) : Predicate {\n        if (data.range_type === 'entity') {\n            data.range = data.range_ref;\n            data.rangeIsReference = true;\n        } else {\n            data.range = data.range_type;\n            data.rangeIsReference = false;\n        }\n\n        return Object.assign(Object.create(Predicate.prototype), Object.assign(data, {\n            'sameAs': data.same_as\n        }));\n    }\n\n\n    protected toSchema(data: Predicate) {\n        return PredicateController.toSchema(data);\n    }\n\n    protected fromSchema(data: any) : Predicate {\n        return PredicateController.fromSchema(data);\n    }\n\n    public getCollectionJson(obj: { new(): Predicate; }, params: any = {}) : Promise<Predicate[]>  {\n        if (params.domain !== undefined) {\n            //TODO: this check should be unecessery\n            return this.db.getAncestorsOf(isArray(params.domain) ? params.domain[0] : params.domain, 'entity_types')\n            .then((ancestors) => {\n                return this.db.select('predicates').whereIn('domain', ancestors.concat([params.domain[0]]))\n                .then((results) => results.map((result) => this.fromSchema(result)));\n            });\n        } else {\n            return super.getCollectionJson(obj, params);\n        }\n    }\n\n    public putItem(obj: { new(): Predicate; }, uid: number, data: Predicate) : Promise<string> {\n\n        if (typeof(uid) !== 'number') {\n            throw new Error('Expected single column identifier');\n        }\n\n        return this.db.updateItem(this.tableName, Serializer.toJson(data));\n    }\n\n    public patchItem(obj: { new(): Predicate; }, uid: number, data: Predicate) : Promise<boolean> {\n\n        if (data.domain !== undefined) {\n            return this.db.select('records', ['entities.type as entityType'])\n                .distinct()\n                .where({ predicate: uid })\n                .innerJoin('entities', 'records.entity', 'entities.uid')\n            .then((records) => {\n\n                if (records.length > 0) {\n\n                    return this.db.getChildrenOf(data.domain, 'entity_types')\n                    .then((res) => {\n                        records.map((e) => e.entityType)\n                        .forEach((e) => {\n                            if (res.indexOf(e) === -1) {\n                                throw new OperationNotPermittedException({\n                                    message: 'The operation could not be completed as it would invalidate predicate relationships',\n                                    data: Promise.resolve({})\n                                });\n                            }\n                        });\n                    }).then(() => super.patchItem(obj, uid, data));\n                }\n\n                return super.patchItem(obj, uid, data);\n            });\n        }\n\n        //TODO: fix range enforcement\n        if (data.range !== undefined) {\n\n            return this.db.select('records')\n                .where({ predicate: uid })\n            .then((records) => {\n\n                if (records.length > 0) {\n\n                    if (data.rangeIsReference === false) {\n                        throw new OperationNotPermittedException({\n                            message: 'The operation could not be completed as it would invalidate predicate relationships',\n                            data: Promise.resolve({})\n                        });\n                    }\n\n                    return this.db.getChildrenOf(data.range, 'entity_types')\n                    .then((res) => {\n                        records.map((e) => e.value_entity)\n                        .forEach((e) => {\n                            if (res.indexOf(e) === -1) {\n                                throw new OperationNotPermittedException({\n                                    message: 'The operation could not be completed as it would invalidate predicate relationships',\n                                    data: Promise.resolve({})\n                                });\n                            }\n                        });\n                    }).then(() => super.patchItem(obj, uid, data));\n                }\n\n                return super.patchItem(obj, uid, data);\n            });\n        }\n\n        return super.patchItem(obj, uid, data);\n    }\n\n     public deleteItem(obj: { new(): Predicate; }, uid: number) : Promise<string> {\n        // check if this entity is the parent of another entity or if it has any relationships\n        // pointing towards it.\n        return Promise.all([\n            this.db.loadCollection('records', { predicate: uid})\n        ]).then(([records]) => {\n            if (records.length === 0) {\n                return this.db.deleteItem(this.tableName, uid);\n            } else {\n                throw new OperationNotPermittedException({\n                    message: 'The operation could not be completed as the predicate is used by other records',\n                    data: Promise.resolve({\n                        record: records.map((record) => RecordController.fromSchema(record))\n                    })\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/PredicateController.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Database } from '../core/Database';\n\nimport { Record, Serializer } from 'falcon-core';\nimport { GenericController } from './GenericController';\n\nimport { OperationNotPermittedException } from '../core/Exceptions';\n\nimport { omit } from 'lodash';\n\nexport class RecordController extends GenericController<Record> {\n\n    constructor(db : Database) {\n        super(db, 'records');\n    }\n\n    public static toSchema(data: Record) {\n        const schemaOutput = omit(Serializer.toJson(data),\n            'value',\n            'valueType',\n            'creationTimestamp',\n            'label',\n            'lastmodifiedTimestamp');\n\n        schemaOutput.value_type = data.valueType;\n\n        if (data.valueType !== undefined && data.valueType !== 'source') {\n            schemaOutput['value_' + data.valueType] = data.value;\n        }\n\n        return Object.assign({}, schemaOutput, {\n            creation_timestamp: data.creationTimestamp,\n            lastmodified_timeStamp: data.lastmodifiedTimestamp\n        });\n    }\n\n    public static fromSchema(data: any) : Record {\n\n        data.valueType = data.value_type;\n\n        switch (data.value_type) {\n            case 'entity':\n                data.value = data.value_entity;\n                break;\n            case 'string':\n                data.value = data.value_string;\n                break;\n            case 'date':\n                data.value = data.value_date;\n                break;\n            case 'integer':\n                data.value = data.value_integer;\n                break;\n            case 'point':\n                data.value = data.value_point;\n                break;\n            case 'region':\n                data.value = data.value_region;\n                break;\n            case 'source':\n                data.value = data.source;\n                break;\n            default:\n                data.value = null;\n        }\n\n        return Object.assign(Object.create(Record.prototype), data);\n    }\n\n    protected toSchema(data: Record) {\n      return RecordController.toSchema(data);\n    }\n\n    protected fromSchema(data: any) {\n      return RecordController.fromSchema(data);\n    }\n\n    public postItem(obj: { new(): Record; }, data: Record) : Promise<string> {\n\n        // predicate domain must equal value_type\n        return this.db.select('predicates', ['range_type']).where({ uid: data.predicate })\n        .then(([predicate]) => {\n            if (data.valueType === predicate.range_type) {\n                //TODO: still need to check entity type constraints\n                return super.postItem(obj, data);\n            }\n            throw new OperationNotPermittedException({\n                message: 'Attempted to add a record with an incorrect type!',\n                data: Promise.resolve({})\n            });\n        });\n    }\n\n    public putItem(obj: { new(): Record; }, uid: number, data: Record) : Promise<string> {\n\n        //TODO: what happens if we only update the value - and do not send the valueType again?\n\n        return this.db.select('predicates', ['range_type']).where({ uid: data.predicate })\n        .then(([predicate]) => {\n            if (data.valueType === predicate.range_type) {\n                //TODO: still need to check entity type constraints\n                return super.putItem(obj, uid, data);\n            }\n            throw new OperationNotPermittedException({\n                message: 'Attempted to add a record with an incorrect type!',\n                data: Promise.resolve({})\n            });\n        });\n    }\n\n    public patchItem(obj: { new(): Record; }, uid: number, data: Record) : Promise<boolean> {\n        return this.db.select('predicates', ['range_type']).where({ uid: data.predicate })\n        .then(([predicate]) => {\n            if (data.valueType === predicate.range_type) {\n                //TODO: still need to check entity type constraints\n                return super.patchItem(obj, uid, data);\n            }\n            throw new OperationNotPermittedException({\n                message: 'Attempted to add a record with an incorrect type!',\n                data: Promise.resolve({})\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/RecordController.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Database } from '../core/Database';\n\nimport { Source, Serializer } from 'falcon-core';\nimport { GenericController } from './GenericController';\n\nimport { OperationNotPermittedException } from '../core/Exceptions';\n\nimport { RecordController } from './RecordController';\n\nimport { omit, groupBy, flatten, map as pluck } from 'lodash';\n\nexport class SourceController extends GenericController<Source> {\n\n    constructor(db : Database) {\n        super(db, 'sources');\n    }\n\n    public toSchema(data: Source) {\n        return Object.assign({}, omit(Serializer.toJson(data),\n            'metaData',\n            'sameAs',\n            'parents',\n            'children',\n            'creationTimestamp',\n            'lastmodifiedTimestamp'\n        ), {\n            same_as: data.sameAs,\n            creation_timestamp: data.creationTimestamp,\n            lastmodified_timeStamp: data.lastmodifiedTimestamp\n        });\n    }\n\n    public fromSchema(data: any) : Source {\n        return Object.assign(Object.create(Source.prototype), Object.assign(data, {\n            'sameAs': data.same_as\n        }));\n    }\n\n    // override the getItemJson and getCollectionJson functions to also get information about the\n    // metadata associated with the retrieved source\n\n    private getMetadata(fields : string[], sourceId: number) : Promise<any> {\n\n        return this.db.query().raw(`\n            WITH RECURSIVE parent_of(uid, parent) AS  (SELECT uid, parent FROM sources),\n                ancestor(uid) AS (\n                SELECT parent FROM parent_of WHERE uid=?\n                UNION ALL\n                SELECT parent FROM parent_of JOIN ancestor USING(uid) )\n\n            SELECT *\n                FROM ancestor;\n        `, sourceId).then((parents) => {\n            parents = pluck(parents, 'uid');\n            parents.pop();\n            parents = [sourceId].concat(parents);\n            return Promise.all(parents.map((parent) =>\n                this.db.query().select(fields)\n                .from('source_elements')\n                .innerJoin('elements', function() { this.on('source_elements.element', '=', 'elements.uid'); })\n                .innerJoin('element_sets', function() { this.on('element_sets.uid', '=', 'elements.element_set'); })\n                .where({ 'source_elements.source': parent })\n\n            )).then((results) => {\n                const a = groupBy(flatten(results), 'label');\n                return Object.keys(a).reduce((prev, cur) => {\n                    const meta = omit(a[cur][0], 'source', 'value');\n                    meta['values'] = a[cur]\n                        .map((val) => ({ source: val.source, value: val.value, uid: val.uid }))\n                        .sort((a, b) => parents.indexOf(a.source) - parents.indexOf(b.source));\n                    return Object.assign(prev, { [cur]: meta });\n                }, {});\n            });\n        });\n    }\n\n    public getItemJson(obj: { new(): Source; }, uid: number) : Promise<Source> {\n        return super.getItemJson(obj, uid)\n        .then((source) => {\n\n            if (source.uid === null) {\n                throw new Error('could not find source');\n            }\n\n            return Promise.all([\n                this.getMetadata([\n                'source_elements.source as source',\n                'elements.label',\n                'source_elements.value',\n                'elements.description',\n                'element_sets.label as element_set',\n                'elements.comment',\n                'elements.uri',\n                'elements.uid as element_uid'], source.uid),\n\n                this.db.query().select('uid').from('sources').where({ parent: uid }),\n\n                this.db.query().raw(`\n                    WITH RECURSIVE parent_of(uid, parent) AS  (SELECT uid, parent FROM sources),\n                    ancestor(uid) AS (\n                    SELECT parent FROM parent_of WHERE uid=?\n                    UNION ALL\n                    SELECT parent FROM parent_of JOIN ancestor USING(uid) )\n\n                    SELECT uid\n                    FROM ancestor;\n                `, uid)\n            ])\n            .then(([sourceElements, children, parents]) => {\n                source.metaData = sourceElements;\n                source.children = children.map((child) => child.uid).filter((child) => child !== null);\n                source.parents = parents.map((parent) => parent.uid).filter((parent) => parent !== null);\n                return source;\n            });\n        });\n    }\n\n    public getCollectionJson(obj: { new(): Source; }, params: any = {}) : Promise<Source[]> {\n        return super.getCollectionJson(obj, params)\n        .then((sources) => {\n            return Promise.all(sources.map((source) => {\n\n                if (source.uid === null) {\n                    throw new Error('could not find source');\n                }\n\n                return this.getMetadata([\n                    'elements.label',\n                    'source_elements.value'\n                ], source.uid)\n                .then((sourceElements) => {\n                    source.metaData = sourceElements;\n                    return source;\n                });\n\n            }));\n        });\n    }\n\n    //TODO should find every child source, not just the direct children\n    public deleteItem(obj: { new(): Source; }, uid: number) : Promise<string> {\n        // check if this entity is the parent of another entity or if it has any relationships\n        // pointing towards it.\n        return Promise.all([\n            this.db.loadCollection('records', { source: uid}),\n            this.db.loadCollection('sources', { parent: uid})\n        ]).then(([records, sources]) => {\n            if (records.length + sources.length === 0) {\n                return this.db.deleteItem(this.tableName, uid);\n            } else {\n                throw new OperationNotPermittedException({\n                    message: 'The operation could not be completed as the source is used by other records',\n                    data: Promise.resolve({\n                        record: records.map((record) => RecordController.fromSchema(record)),\n                        source: sources.map((source) => this.fromSchema(source))\n                    })\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/SourceController.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Database } from '../core/Database';\n\nimport { Element, Serializer } from 'falcon-core';\n\nimport { GenericController } from './GenericController';\n\nexport class ElementController extends GenericController<Element> {\n\n    constructor(db : Database) {\n        super(db, 'elements');\n    }\n\n    public toSchema(data: Element) : any {\n        return Serializer.toJson(data);\n    }\n\n    public fromSchema(data: any) : Element {\n        return Object.assign(Object.create(Element.prototype), data);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/ElementController.ts","/**\n * @fileOverview Controller for element sets\n * @author <a href='mailto:tim.hollies@warwick.ac.uk'>Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport { Database } from '../core/Database';\n\nimport { SourceElement, Serializer, CompositeKey } from 'falcon-core';\n\nimport { GenericController } from './GenericController';\n\nimport { KeyNotFoundException } from '../core/Exceptions';\n\nimport { omit } from 'lodash';\n\nexport class SourceElementController extends GenericController<SourceElement> {\n\n    constructor(db : Database) {\n        super(db, 'source_elements');\n    }\n\n     public toSchema(data: SourceElement) {\n        return Object.assign(omit(Serializer.toJson(data),\n            'creationTimestamp',\n            'lastmodifiedTimestamp',\n            'uid',\n            'label'\n        ), {\n            creation_timestamp: data.creationTimestamp,\n            lastmodified_timeStamp: data.lastmodifiedTimestamp,\n            // TODO: check these exist\n            source: data.uid.values['source'],\n            element: data.uid.values['element']\n        });\n    }\n\n    public fromSchema(data: any) : SourceElement {\n        return Object.assign(Object.create(SourceElement.prototype), Object.assign(data, {\n                uid: {\n                order: ['source', 'element'],\n                values: {\n                    source: data.source,\n                    element: data.element\n                }\n            }\n        }));\n    }\n\n    public getItemJson(obj: { new(): SourceElement; }, uid: CompositeKey) : Promise<SourceElement> {\n        return this.db.query().select()\n        .from(this.tableName)\n        .where(uid.values)\n        .first()\n        .then((result) => result === undefined ? Promise.reject(new KeyNotFoundException()) : result)\n        .then((data) => this.fromSchema(data));\n    }\n\n    public putItem(obj: { new(): SourceElement; }, uid: CompositeKey, data: SourceElement) : Promise<string> {\n        return this.db.query()(this.tableName)\n            .where(uid.values)\n            .update(this.toSchema(data));\n    }\n\n    public patchItem(obj: { new(): SourceElement; }, uid: CompositeKey, data: SourceElement) : Promise<boolean> {\n        const schemaData = this.toSchema(data);\n\n        const keys = Object.keys(schemaData);\n\n        const updateObject = {};\n\n        for (let i = 0; i < keys.length; i += 1) {\n            if (schemaData[keys[i]] !== undefined) {\n                updateObject[keys[i]] = schemaData[keys[i]];\n            }\n        }\n\n        return this.db.query()(this.tableName)\n            .where(uid.values)\n            .update(updateObject)\n            .then(() => true)\n            .catch((err) => { throw new Error(err); });\n    }\n\n    public deleteItem(obj: { new(): SourceElement; }, uid: CompositeKey) : Promise<string> {\n        return this.db.query()(this.tableName)\n            .where(uid.values)\n            .del();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/controllers/SourceElementController.ts","/**\n * @fileOverview Authentication\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport * as  passport from 'koa-passport';\nimport { Strategy as LocalStrategy } from 'passport-local';\n\nimport { hash, compare } from 'bcrypt';\n\nimport { Database } from './Database';\n\nexport const setupAuth = (db: Database) => {\n    passport.serializeUser((user, done) => {\n        done(null, user.uid);\n    });\n\n    passport.deserializeUser((uid, done) => {\n        db.query()('users')\n        .select().where({uid})\n        .then(([user]) => done(null, user));\n    });\n\n    passport.use(new LocalStrategy((username, password, done) => {\n        // retrieve user ...\n        return db.query()('users')\n        .select().where({username})\n        .then(([user]) => compare(password, user.password, (err, res) => {\n            if (err) {\n                done(null, false);\n            } else {\n                done(null, user);\n            }\n      }))}));\n};\n\nexport const Auth = {\n    setupAuth\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/core/Auth.ts","module.exports = require(\"passport-local\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"passport-local\"\n// module id = 43\n// module chunks = 0","module.exports = require(\"bcrypt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcrypt\"\n// module id = 44\n// module chunks = 0","/**\n * @fileOverview Database Snapshot\n * @author <a href=\"mailto:tim.hollies@warwick.ac.uk\">Tim Hollies</a>\n * @version 0.0.1\n */\n\nimport * as Knex from 'knex';\nimport * as sqlite from 'sqlite3';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport class SqliteSnapshot {\n\n    private knex : Knex;\n\n    constructor(config: Knex.Config) {\n        this.knex = Knex(config);\n    }\n\n    //TODO: use some kind of tempory file tracking package\n\n    public getSnapshotStream() : Promise<fs.ReadStream> {\n        const filename = path.join(process.cwd(), 'data', 'test.sqlite');\n       // fs.unlinkSync(filename);\n       // const db = new sqlite.Database(filename);\n\n        const tempKnex = Knex({\n            client: 'sqlite3',\n            connection: { filename },\n            migrations: {\n                directory: path.join(process.cwd(), 'data', 'migrations')\n            },\n            seeds: {\n              directory: path.join(process.cwd(), 'data', 'seeds')\n            },\n            useNullAsDefault: true\n        });\n\n        return tempKnex.migrate.latest()\n        .then(() => tempKnex.seed.run())\n        .then(() => {\n            return new Promise((res) => {\n                tempKnex.destroy(() => {\n                    const stream = fs.createReadStream(filename);\n                    stream.on('close', () => {\n                        fs.unlinkSync(filename);\n                    });\n                    res(stream);\n                });\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/core/SqliteSnapshot.ts","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 46\n// module chunks = 0","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 47\n// module chunks = 0"],"sourceRoot":""}